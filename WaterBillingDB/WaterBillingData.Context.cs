//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterBillingDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WaterBillingEntities : DbContext
    {
        public WaterBillingEntities()
            : base("name=WaterBillingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BoardRentMaster> BoardRentMaster { get; set; }
        public virtual DbSet<MastersList> MastersList { get; set; }
        public virtual DbSet<ReasonMaster> ReasonMaster { get; set; }
        public virtual DbSet<ConsumerMeterMaster> ConsumerMeterMaster { get; set; }
        public virtual DbSet<MeterMinChargeMaster> MeterMinChargeMaster { get; set; }
        public virtual DbSet<UserMaster> UserMaster { get; set; }
        public virtual DbSet<MenuMaster> MenuMaster { get; set; }
        public virtual DbSet<MasterValue> MasterValue { get; set; }
        public virtual DbSet<UserCollCentRights> UserCollCentRights { get; set; }
        public virtual DbSet<ChqBounceChargiesMaster> ChqBounceChargiesMaster { get; set; }
        public virtual DbSet<ConsumeRateMaster> ConsumeRateMaster { get; set; }
        public virtual DbSet<DrCrNote> DrCrNote { get; set; }
        public virtual DbSet<EffDate> EffDate { get; set; }
        public virtual DbSet<OtherChargies> OtherChargies { get; set; }
        public virtual DbSet<ConsumerMaster> ConsumerMaster { get; set; }
        public virtual DbSet<ConsumeDetail> ConsumeDetail { get; set; }
        public virtual DbSet<ReceiptDetail> ReceiptDetail { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_BoardRentMaster_Delete(Nullable<System.DateTime> pEffectiveDate)
        {
            var pEffectiveDateParameter = pEffectiveDate.HasValue ?
                new ObjectParameter("pEffectiveDate", pEffectiveDate) :
                new ObjectParameter("pEffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_BoardRentMaster_Delete", pEffectiveDateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_BoardRentMaster_Save(Nullable<int> pID, Nullable<System.DateTime> pEffectDate, Nullable<int> pRefMeterTypeID, Nullable<int> pRefMeterSizeID, Nullable<decimal> pRate, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefMeterTypeIDParameter = pRefMeterTypeID.HasValue ?
                new ObjectParameter("pRefMeterTypeID", pRefMeterTypeID) :
                new ObjectParameter("pRefMeterTypeID", typeof(int));
    
            var pRefMeterSizeIDParameter = pRefMeterSizeID.HasValue ?
                new ObjectParameter("pRefMeterSizeID", pRefMeterSizeID) :
                new ObjectParameter("pRefMeterSizeID", typeof(int));
    
            var pRateParameter = pRate.HasValue ?
                new ObjectParameter("pRate", pRate) :
                new ObjectParameter("pRate", typeof(decimal));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_BoardRentMaster_Save", pIDParameter, pEffectDateParameter, pRefMeterTypeIDParameter, pRefMeterSizeIDParameter, pRateParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_BoardRentMaster_Select_Result> sp_BoardRentMaster_Select(Nullable<System.DateTime> pEffectiveDate)
        {
            var pEffectiveDateParameter = pEffectiveDate.HasValue ?
                new ObjectParameter("pEffectiveDate", pEffectiveDate) :
                new ObjectParameter("pEffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BoardRentMaster_Select_Result>("sp_BoardRentMaster_Select", pEffectiveDateParameter);
        }
    
        public virtual int sp_BoardRentMaster_SetupNewDate(Nullable<System.DateTime> pEffectDate, Nullable<int> pInsUser, string pInsTerminal)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BoardRentMaster_SetupNewDate", pEffectDateParameter, pInsUserParameter, pInsTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ConsumerMaster_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ConsumerMaster_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MasterValue_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MasterValue_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_Select_Result> sp_MasterValue_Select(Nullable<int> pRefMasterID, Nullable<int> pID)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_Select_Result>("sp_MasterValue_Select", pRefMasterIDParameter, pIDParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_SelectWhere_Result> sp_MasterValue_SelectWhere(Nullable<int> pRefMasterID, string dfltWhere)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_SelectWhere_Result>("sp_MasterValue_SelectWhere", pRefMasterIDParameter, dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ReasonMaster_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ReasonMaster_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ReasonMaster_Save(Nullable<int> pID, Nullable<int> pRefReasonTypeID, string pReasonName, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefReasonTypeIDParameter = pRefReasonTypeID.HasValue ?
                new ObjectParameter("pRefReasonTypeID", pRefReasonTypeID) :
                new ObjectParameter("pRefReasonTypeID", typeof(int));
    
            var pReasonNameParameter = pReasonName != null ?
                new ObjectParameter("pReasonName", pReasonName) :
                new ObjectParameter("pReasonName", typeof(string));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ReasonMaster_Save", pIDParameter, pRefReasonTypeIDParameter, pReasonNameParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ReasonMaster_Select_Result> sp_ReasonMaster_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReasonMaster_Select_Result>("sp_ReasonMaster_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_ReasonMaster_SelectWhere_Result> sp_ReasonMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReasonMaster_SelectWhere_Result>("sp_ReasonMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserMaster_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserMaster_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<sp_UserMaster_Select_Result> sp_UserMaster_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMaster_Select_Result>("sp_UserMaster_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_UserMaster_SelectWhere_Result> sp_UserMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMaster_SelectWhere_Result>("sp_UserMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ConsumerMeterMaster_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ConsumerMeterMaster_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ConsumerMeterMaster_Save(Nullable<int> pID, Nullable<int> pRefConsumerId, string pMeterNo, string pMeterMake, Nullable<decimal> pInitialReading, Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pInActiveDate, Nullable<decimal> pMaxReadingNo, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefConsumerIdParameter = pRefConsumerId.HasValue ?
                new ObjectParameter("pRefConsumerId", pRefConsumerId) :
                new ObjectParameter("pRefConsumerId", typeof(int));
    
            var pMeterNoParameter = pMeterNo != null ?
                new ObjectParameter("pMeterNo", pMeterNo) :
                new ObjectParameter("pMeterNo", typeof(string));
    
            var pMeterMakeParameter = pMeterMake != null ?
                new ObjectParameter("pMeterMake", pMeterMake) :
                new ObjectParameter("pMeterMake", typeof(string));
    
            var pInitialReadingParameter = pInitialReading.HasValue ?
                new ObjectParameter("pInitialReading", pInitialReading) :
                new ObjectParameter("pInitialReading", typeof(decimal));
    
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pInActiveDateParameter = pInActiveDate.HasValue ?
                new ObjectParameter("pInActiveDate", pInActiveDate) :
                new ObjectParameter("pInActiveDate", typeof(System.DateTime));
    
            var pMaxReadingNoParameter = pMaxReadingNo.HasValue ?
                new ObjectParameter("pMaxReadingNo", pMaxReadingNo) :
                new ObjectParameter("pMaxReadingNo", typeof(decimal));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ConsumerMeterMaster_Save", pIDParameter, pRefConsumerIdParameter, pMeterNoParameter, pMeterMakeParameter, pInitialReadingParameter, pStartDateParameter, pInActiveDateParameter, pMaxReadingNoParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerMeterMaster_Select_Result> sp_ConsumerMeterMaster_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerMeterMaster_Select_Result>("sp_ConsumerMeterMaster_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerMeterMaster_SelectWhere_Result> sp_ConsumerMeterMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerMeterMaster_SelectWhere_Result>("sp_ConsumerMeterMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerMaster_Select_Result> sp_ConsumerMaster_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerMaster_Select_Result>("sp_ConsumerMaster_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerMaster_SelectWhere_Result> sp_ConsumerMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerMaster_SelectWhere_Result>("sp_ConsumerMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual int sp_MeterMinChargeMaster_Save(Nullable<int> pId, Nullable<decimal> pRate, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRateParameter = pRate.HasValue ?
                new ObjectParameter("pRate", pRate) :
                new ObjectParameter("pRate", typeof(decimal));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MeterMinChargeMaster_Save", pIdParameter, pRateParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MeterMinChargeMaster_Select_Result> sp_MeterMinChargeMaster_Select(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefSupplyTypeId)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MeterMinChargeMaster_Select_Result>("sp_MeterMinChargeMaster_Select", pEffectDateParameter, pRefSupplyTypeIdParameter);
        }
    
        public virtual int sp_ConsumerRateMaster_Save(Nullable<int> pId, Nullable<decimal> pRate, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRateParameter = pRate.HasValue ?
                new ObjectParameter("pRate", pRate) :
                new ObjectParameter("pRate", typeof(decimal));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConsumerRateMaster_Save", pIdParameter, pRateParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserMaster_SetUserRole(Nullable<int> pID, Nullable<int> pRefRoleID, string pUserName, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefRoleIDParameter = pRefRoleID.HasValue ?
                new ObjectParameter("pRefRoleID", pRefRoleID) :
                new ObjectParameter("pRefRoleID", typeof(int));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserMaster_SetUserRole", pIDParameter, pRefRoleIDParameter, pUserNameParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MenuRoleRights_Save(Nullable<int> pRefRoleId, Nullable<int> pRefMenuId, Nullable<bool> pCanInsert, Nullable<bool> pCanUpdate, Nullable<bool> pCanDelete, Nullable<bool> pCanView, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            var pRefMenuIdParameter = pRefMenuId.HasValue ?
                new ObjectParameter("pRefMenuId", pRefMenuId) :
                new ObjectParameter("pRefMenuId", typeof(int));
    
            var pCanInsertParameter = pCanInsert.HasValue ?
                new ObjectParameter("pCanInsert", pCanInsert) :
                new ObjectParameter("pCanInsert", typeof(bool));
    
            var pCanUpdateParameter = pCanUpdate.HasValue ?
                new ObjectParameter("pCanUpdate", pCanUpdate) :
                new ObjectParameter("pCanUpdate", typeof(bool));
    
            var pCanDeleteParameter = pCanDelete.HasValue ?
                new ObjectParameter("pCanDelete", pCanDelete) :
                new ObjectParameter("pCanDelete", typeof(bool));
    
            var pCanViewParameter = pCanView.HasValue ?
                new ObjectParameter("pCanView", pCanView) :
                new ObjectParameter("pCanView", typeof(bool));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MenuRoleRights_Save", pRefRoleIdParameter, pRefMenuIdParameter, pCanInsertParameter, pCanUpdateParameter, pCanDeleteParameter, pCanViewParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MenuRoleRights_Select_Result> sp_MenuRoleRights_Select(Nullable<int> pRefRoleId)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MenuRoleRights_Select_Result>("sp_MenuRoleRights_Select", pRefRoleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MenuRoleRights_Delete(Nullable<int> pRefRoleId)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MenuRoleRights_Delete", pRefRoleIdParameter);
        }
    
        public virtual ObjectResult<sp_RetrieveMenuRightsWise_Select_Result> sp_RetrieveMenuRightsWise_Select(string pUserName)
        {
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetrieveMenuRightsWise_Select_Result>("sp_RetrieveMenuRightsWise_Select", pUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MasterValue_Save(Nullable<int> pRefMasterID, Nullable<int> pID, string pValueName, string pShortName, string pMarathiName, Nullable<decimal> pOrdNo, Nullable<bool> pIsActive, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pRefMasterIDParameter = pRefMasterID.HasValue ?
                new ObjectParameter("pRefMasterID", pRefMasterID) :
                new ObjectParameter("pRefMasterID", typeof(int));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pValueNameParameter = pValueName != null ?
                new ObjectParameter("pValueName", pValueName) :
                new ObjectParameter("pValueName", typeof(string));
    
            var pShortNameParameter = pShortName != null ?
                new ObjectParameter("pShortName", pShortName) :
                new ObjectParameter("pShortName", typeof(string));
    
            var pMarathiNameParameter = pMarathiName != null ?
                new ObjectParameter("pMarathiName", pMarathiName) :
                new ObjectParameter("pMarathiName", typeof(string));
    
            var pOrdNoParameter = pOrdNo.HasValue ?
                new ObjectParameter("pOrdNo", pOrdNo) :
                new ObjectParameter("pOrdNo", typeof(decimal));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MasterValue_Save", pRefMasterIDParameter, pIDParameter, pValueNameParameter, pShortNameParameter, pMarathiNameParameter, pOrdNoParameter, pIsActiveParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual int SetLogout(string sessionID)
        {
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetLogout", sessionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ConsumeDetail_Delete(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ConsumeDetail_Delete", pIDParameter);
        }
    
        public virtual ObjectResult<sp_ConsumeDetail_Select_Result> sp_ConsumeDetail_Select(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumeDetail_Select_Result>("sp_ConsumeDetail_Select", pIDParameter);
        }
    
        public virtual ObjectResult<sp_ConsumeDetail_SelectWhere_Result> sp_ConsumeDetail_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumeDetail_SelectWhere_Result>("sp_ConsumeDetail_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserCollCentRights_Delete(Nullable<int> pRefUserId)
        {
            var pRefUserIdParameter = pRefUserId.HasValue ?
                new ObjectParameter("pRefUserId", pRefUserId) :
                new ObjectParameter("pRefUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserCollCentRights_Delete", pRefUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_UserCollCentRights_SetCollCentRights(Nullable<int> pRefUserId, Nullable<int> pRefCollectionCenterId, Nullable<bool> pIsActive, Nullable<int> pInsUser, string pInsTerminal)
        {
            var pRefUserIdParameter = pRefUserId.HasValue ?
                new ObjectParameter("pRefUserId", pRefUserId) :
                new ObjectParameter("pRefUserId", typeof(int));
    
            var pRefCollectionCenterIdParameter = pRefCollectionCenterId.HasValue ?
                new ObjectParameter("pRefCollectionCenterId", pRefCollectionCenterId) :
                new ObjectParameter("pRefCollectionCenterId", typeof(int));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_UserCollCentRights_SetCollCentRights", pRefUserIdParameter, pRefCollectionCenterIdParameter, pIsActiveParameter, pInsUserParameter, pInsTerminalParameter);
        }
    
        public virtual ObjectResult<sp_UserMaster_Save_Result> sp_UserMaster_Save(Nullable<int> pID, Nullable<int> pRefUserTypeID, string pFirstName, string pLastName, string pPhotoPath, string pGender, Nullable<System.DateTime> pDOB, string pMobileNo, string pContactNo1, string pContactNo2, string pEmailID, Nullable<bool> pIsActive, Nullable<int> pRefRoleID, string pUserName, Nullable<bool> pAllowMobileRegistration, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefUserTypeIDParameter = pRefUserTypeID.HasValue ?
                new ObjectParameter("pRefUserTypeID", pRefUserTypeID) :
                new ObjectParameter("pRefUserTypeID", typeof(int));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pPhotoPathParameter = pPhotoPath != null ?
                new ObjectParameter("pPhotoPath", pPhotoPath) :
                new ObjectParameter("pPhotoPath", typeof(string));
    
            var pGenderParameter = pGender != null ?
                new ObjectParameter("pGender", pGender) :
                new ObjectParameter("pGender", typeof(string));
    
            var pDOBParameter = pDOB.HasValue ?
                new ObjectParameter("pDOB", pDOB) :
                new ObjectParameter("pDOB", typeof(System.DateTime));
    
            var pMobileNoParameter = pMobileNo != null ?
                new ObjectParameter("pMobileNo", pMobileNo) :
                new ObjectParameter("pMobileNo", typeof(string));
    
            var pContactNo1Parameter = pContactNo1 != null ?
                new ObjectParameter("pContactNo1", pContactNo1) :
                new ObjectParameter("pContactNo1", typeof(string));
    
            var pContactNo2Parameter = pContactNo2 != null ?
                new ObjectParameter("pContactNo2", pContactNo2) :
                new ObjectParameter("pContactNo2", typeof(string));
    
            var pEmailIDParameter = pEmailID != null ?
                new ObjectParameter("pEmailID", pEmailID) :
                new ObjectParameter("pEmailID", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pRefRoleIDParameter = pRefRoleID.HasValue ?
                new ObjectParameter("pRefRoleID", pRefRoleID) :
                new ObjectParameter("pRefRoleID", typeof(int));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var pAllowMobileRegistrationParameter = pAllowMobileRegistration.HasValue ?
                new ObjectParameter("pAllowMobileRegistration", pAllowMobileRegistration) :
                new ObjectParameter("pAllowMobileRegistration", typeof(bool));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMaster_Save_Result>("sp_UserMaster_Save", pIDParameter, pRefUserTypeIDParameter, pFirstNameParameter, pLastNameParameter, pPhotoPathParameter, pGenderParameter, pDOBParameter, pMobileNoParameter, pContactNo1Parameter, pContactNo2Parameter, pEmailIDParameter, pIsActiveParameter, pRefRoleIDParameter, pUserNameParameter, pAllowMobileRegistrationParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ChqBounceChargiesMaster_Save(Nullable<int> pId, Nullable<decimal> pChargies, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pChargiesParameter = pChargies.HasValue ?
                new ObjectParameter("pChargies", pChargies) :
                new ObjectParameter("pChargies", typeof(decimal));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ChqBounceChargiesMaster_Save", pIdParameter, pChargiesParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ChqBounceChargiesMaster_Select_Result> sp_ChqBounceChargiesMaster_Select(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefBankId)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefBankIdParameter = pRefBankId.HasValue ?
                new ObjectParameter("pRefBankId", pRefBankId) :
                new ObjectParameter("pRefBankId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ChqBounceChargiesMaster_Select_Result>("sp_ChqBounceChargiesMaster_Select", pEffectDateParameter, pRefBankIdParameter);
        }
    
        public virtual ObjectResult<sp_ChqBounceChargiesMaster_SetupNewChargies_Result> sp_ChqBounceChargiesMaster_SetupNewChargies(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefBankId, Nullable<int> pInsUser, string pInsTerminal)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefBankIdParameter = pRefBankId.HasValue ?
                new ObjectParameter("pRefBankId", pRefBankId) :
                new ObjectParameter("pRefBankId", typeof(int));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ChqBounceChargiesMaster_SetupNewChargies_Result>("sp_ChqBounceChargiesMaster_SetupNewChargies", pEffectDateParameter, pRefBankIdParameter, pInsUserParameter, pInsTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ConsumeRateMaster_SetupNewRate_Result> sp_ConsumeRateMaster_SetupNewRate(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefSupplyTypeId, Nullable<int> pInsUser, string pInsTerminal)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumeRateMaster_SetupNewRate_Result>("sp_ConsumeRateMaster_SetupNewRate", pEffectDateParameter, pRefSupplyTypeIdParameter, pInsUserParameter, pInsTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerRateMaster_Select_Result> sp_ConsumerRateMaster_Select(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefSupplyTypeId)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerRateMaster_Select_Result>("sp_ConsumerRateMaster_Select", pEffectDateParameter, pRefSupplyTypeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_ReceiptDetail_Delete(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_ReceiptDetail_Delete", pIdParameter);
        }
    
        public virtual ObjectResult<sp_ReceiptDetail_Select_Result> sp_ReceiptDetail_Select(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReceiptDetail_Select_Result>("sp_ReceiptDetail_Select", pIdParameter);
        }
    
        public virtual ObjectResult<sp_ReceiptDetail_SelectWhere_Result> sp_ReceiptDetail_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReceiptDetail_SelectWhere_Result>("sp_ReceiptDetail_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ReceiptDetail_SetChequeStatus(Nullable<int> pId, string pIsChqStatus, string pChqBounceRefNo, Nullable<System.DateTime> pChqBounceDate, Nullable<decimal> pChqBounceCharge, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pIsChqStatusParameter = pIsChqStatus != null ?
                new ObjectParameter("pIsChqStatus", pIsChqStatus) :
                new ObjectParameter("pIsChqStatus", typeof(string));
    
            var pChqBounceRefNoParameter = pChqBounceRefNo != null ?
                new ObjectParameter("pChqBounceRefNo", pChqBounceRefNo) :
                new ObjectParameter("pChqBounceRefNo", typeof(string));
    
            var pChqBounceDateParameter = pChqBounceDate.HasValue ?
                new ObjectParameter("pChqBounceDate", pChqBounceDate) :
                new ObjectParameter("pChqBounceDate", typeof(System.DateTime));
    
            var pChqBounceChargeParameter = pChqBounceCharge.HasValue ?
                new ObjectParameter("pChqBounceCharge", pChqBounceCharge) :
                new ObjectParameter("pChqBounceCharge", typeof(decimal));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ReceiptDetail_SetChequeStatus", pIdParameter, pIsChqStatusParameter, pChqBounceRefNoParameter, pChqBounceDateParameter, pChqBounceChargeParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MeterMinChargeMaster_SetupNewRate_Result> sp_MeterMinChargeMaster_SetupNewRate(Nullable<System.DateTime> pEffectDate, Nullable<int> pRefSupplyTypeId, Nullable<int> pInsUser, string pInsTerminal)
        {
            var pEffectDateParameter = pEffectDate.HasValue ?
                new ObjectParameter("pEffectDate", pEffectDate) :
                new ObjectParameter("pEffectDate", typeof(System.DateTime));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MeterMinChargeMaster_SetupNewRate_Result>("sp_MeterMinChargeMaster_SetupNewRate", pEffectDateParameter, pRefSupplyTypeIdParameter, pInsUserParameter, pInsTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_DrCrNote_Delete(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_DrCrNote_Delete", pIdParameter);
        }
    
        public virtual ObjectResult<sp_DrCrNote_Select_Result> sp_DrCrNote_Select(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DrCrNote_Select_Result>("sp_DrCrNote_Select", pIdParameter);
        }
    
        public virtual ObjectResult<sp_DrCrNote_SelectWhere_Result> sp_DrCrNote_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DrCrNote_SelectWhere_Result>("sp_DrCrNote_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_BG_CheckIfMeterFixedNew(string x_CustNo)
        {
            var x_CustNoParameter = x_CustNo != null ?
                new ObjectParameter("X_CustNo", x_CustNo) :
                new ObjectParameter("X_CustNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_BG_CheckIfMeterFixedNew", x_CustNoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_BG_CheckIfReConnected(string x_CustNo)
        {
            var x_CustNoParameter = x_CustNo != null ?
                new ObjectParameter("X_CustNo", x_CustNo) :
                new ObjectParameter("X_CustNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_BG_CheckIfReConnected", x_CustNoParameter);
        }
    
        public virtual ObjectResult<sp_BG_SelectConsumerMeterDetail_Result> sp_BG_SelectConsumerMeterDetail(string x_CustNo)
        {
            var x_CustNoParameter = x_CustNo != null ?
                new ObjectParameter("X_CustNo", x_CustNo) :
                new ObjectParameter("X_CustNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BG_SelectConsumerMeterDetail_Result>("sp_BG_SelectConsumerMeterDetail", x_CustNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ConsumerMaster_Save(Nullable<int> pID, string pConsumerNo, string pOldConsumerNo, string pFirstName, string pMiddleName, string pLastName, string pFirstNameMarathi, string pMiddleNameMarathi, string pLastNameMarathi, string pAddress, Nullable<int> pRefCityId, Nullable<int> pRefStateId, Nullable<int> pRefCountryId, string pPinCode, string pMobileNo, string pEmailId, string pContact1, string pContact2, Nullable<int> pRefZoneId, Nullable<int> pRefCampId, Nullable<int> pRefReaderId, Nullable<int> pNoOfConnections, Nullable<int> pFamilyMember, Nullable<decimal> pAverageConsumption, Nullable<decimal> pDeposite, Nullable<int> pRefConstructionType, Nullable<int> pRefMeterSizeId, Nullable<int> pRefMeterTypeId, Nullable<int> pRefSupplyTypeId, Nullable<int> pRefSupplyCategoryId, string pBookNo, string pBeatNo, Nullable<decimal> pFolioNo, string pOddEven, Nullable<int> pRefDMAId, Nullable<System.DateTime> pConnectionDate, string pSancRef, string pLetterNo, Nullable<System.DateTime> pLetterDate, string pTRNo, Nullable<System.DateTime> pTRDate, string pPlotId, string pPlumberName, string pPlumberLicNo, Nullable<System.DateTime> pDisconnectedDate, string pDisconnectionOrderNo, Nullable<System.DateTime> pDisconnectionOrderDate, Nullable<System.DateTime> pPrevBillDate, Nullable<System.DateTime> pPrevReadingDate, Nullable<decimal> pPrevReading, Nullable<decimal> pPrevAssessmentAmt, Nullable<decimal> pPrevAmount, Nullable<decimal> pPrevDPC, Nullable<decimal> pPrevRent, Nullable<int> pPrevRefStatusId, Nullable<System.DateTime> pReConnectedDate, string pReconnectedOrderNo, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pConsumerNoParameter = pConsumerNo != null ?
                new ObjectParameter("pConsumerNo", pConsumerNo) :
                new ObjectParameter("pConsumerNo", typeof(string));
    
            var pOldConsumerNoParameter = pOldConsumerNo != null ?
                new ObjectParameter("pOldConsumerNo", pOldConsumerNo) :
                new ObjectParameter("pOldConsumerNo", typeof(string));
    
            var pFirstNameParameter = pFirstName != null ?
                new ObjectParameter("pFirstName", pFirstName) :
                new ObjectParameter("pFirstName", typeof(string));
    
            var pMiddleNameParameter = pMiddleName != null ?
                new ObjectParameter("pMiddleName", pMiddleName) :
                new ObjectParameter("pMiddleName", typeof(string));
    
            var pLastNameParameter = pLastName != null ?
                new ObjectParameter("pLastName", pLastName) :
                new ObjectParameter("pLastName", typeof(string));
    
            var pFirstNameMarathiParameter = pFirstNameMarathi != null ?
                new ObjectParameter("pFirstNameMarathi", pFirstNameMarathi) :
                new ObjectParameter("pFirstNameMarathi", typeof(string));
    
            var pMiddleNameMarathiParameter = pMiddleNameMarathi != null ?
                new ObjectParameter("pMiddleNameMarathi", pMiddleNameMarathi) :
                new ObjectParameter("pMiddleNameMarathi", typeof(string));
    
            var pLastNameMarathiParameter = pLastNameMarathi != null ?
                new ObjectParameter("pLastNameMarathi", pLastNameMarathi) :
                new ObjectParameter("pLastNameMarathi", typeof(string));
    
            var pAddressParameter = pAddress != null ?
                new ObjectParameter("pAddress", pAddress) :
                new ObjectParameter("pAddress", typeof(string));
    
            var pRefCityIdParameter = pRefCityId.HasValue ?
                new ObjectParameter("pRefCityId", pRefCityId) :
                new ObjectParameter("pRefCityId", typeof(int));
    
            var pRefStateIdParameter = pRefStateId.HasValue ?
                new ObjectParameter("pRefStateId", pRefStateId) :
                new ObjectParameter("pRefStateId", typeof(int));
    
            var pRefCountryIdParameter = pRefCountryId.HasValue ?
                new ObjectParameter("pRefCountryId", pRefCountryId) :
                new ObjectParameter("pRefCountryId", typeof(int));
    
            var pPinCodeParameter = pPinCode != null ?
                new ObjectParameter("pPinCode", pPinCode) :
                new ObjectParameter("pPinCode", typeof(string));
    
            var pMobileNoParameter = pMobileNo != null ?
                new ObjectParameter("pMobileNo", pMobileNo) :
                new ObjectParameter("pMobileNo", typeof(string));
    
            var pEmailIdParameter = pEmailId != null ?
                new ObjectParameter("pEmailId", pEmailId) :
                new ObjectParameter("pEmailId", typeof(string));
    
            var pContact1Parameter = pContact1 != null ?
                new ObjectParameter("pContact1", pContact1) :
                new ObjectParameter("pContact1", typeof(string));
    
            var pContact2Parameter = pContact2 != null ?
                new ObjectParameter("pContact2", pContact2) :
                new ObjectParameter("pContact2", typeof(string));
    
            var pRefZoneIdParameter = pRefZoneId.HasValue ?
                new ObjectParameter("pRefZoneId", pRefZoneId) :
                new ObjectParameter("pRefZoneId", typeof(int));
    
            var pRefCampIdParameter = pRefCampId.HasValue ?
                new ObjectParameter("pRefCampId", pRefCampId) :
                new ObjectParameter("pRefCampId", typeof(int));
    
            var pRefReaderIdParameter = pRefReaderId.HasValue ?
                new ObjectParameter("pRefReaderId", pRefReaderId) :
                new ObjectParameter("pRefReaderId", typeof(int));
    
            var pNoOfConnectionsParameter = pNoOfConnections.HasValue ?
                new ObjectParameter("pNoOfConnections", pNoOfConnections) :
                new ObjectParameter("pNoOfConnections", typeof(int));
    
            var pFamilyMemberParameter = pFamilyMember.HasValue ?
                new ObjectParameter("pFamilyMember", pFamilyMember) :
                new ObjectParameter("pFamilyMember", typeof(int));
    
            var pAverageConsumptionParameter = pAverageConsumption.HasValue ?
                new ObjectParameter("pAverageConsumption", pAverageConsumption) :
                new ObjectParameter("pAverageConsumption", typeof(decimal));
    
            var pDepositeParameter = pDeposite.HasValue ?
                new ObjectParameter("pDeposite", pDeposite) :
                new ObjectParameter("pDeposite", typeof(decimal));
    
            var pRefConstructionTypeParameter = pRefConstructionType.HasValue ?
                new ObjectParameter("pRefConstructionType", pRefConstructionType) :
                new ObjectParameter("pRefConstructionType", typeof(int));
    
            var pRefMeterSizeIdParameter = pRefMeterSizeId.HasValue ?
                new ObjectParameter("pRefMeterSizeId", pRefMeterSizeId) :
                new ObjectParameter("pRefMeterSizeId", typeof(int));
    
            var pRefMeterTypeIdParameter = pRefMeterTypeId.HasValue ?
                new ObjectParameter("pRefMeterTypeId", pRefMeterTypeId) :
                new ObjectParameter("pRefMeterTypeId", typeof(int));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            var pRefSupplyCategoryIdParameter = pRefSupplyCategoryId.HasValue ?
                new ObjectParameter("pRefSupplyCategoryId", pRefSupplyCategoryId) :
                new ObjectParameter("pRefSupplyCategoryId", typeof(int));
    
            var pBookNoParameter = pBookNo != null ?
                new ObjectParameter("pBookNo", pBookNo) :
                new ObjectParameter("pBookNo", typeof(string));
    
            var pBeatNoParameter = pBeatNo != null ?
                new ObjectParameter("pBeatNo", pBeatNo) :
                new ObjectParameter("pBeatNo", typeof(string));
    
            var pFolioNoParameter = pFolioNo.HasValue ?
                new ObjectParameter("pFolioNo", pFolioNo) :
                new ObjectParameter("pFolioNo", typeof(decimal));
    
            var pOddEvenParameter = pOddEven != null ?
                new ObjectParameter("pOddEven", pOddEven) :
                new ObjectParameter("pOddEven", typeof(string));
    
            var pRefDMAIdParameter = pRefDMAId.HasValue ?
                new ObjectParameter("pRefDMAId", pRefDMAId) :
                new ObjectParameter("pRefDMAId", typeof(int));
    
            var pConnectionDateParameter = pConnectionDate.HasValue ?
                new ObjectParameter("pConnectionDate", pConnectionDate) :
                new ObjectParameter("pConnectionDate", typeof(System.DateTime));
    
            var pSancRefParameter = pSancRef != null ?
                new ObjectParameter("pSancRef", pSancRef) :
                new ObjectParameter("pSancRef", typeof(string));
    
            var pLetterNoParameter = pLetterNo != null ?
                new ObjectParameter("pLetterNo", pLetterNo) :
                new ObjectParameter("pLetterNo", typeof(string));
    
            var pLetterDateParameter = pLetterDate.HasValue ?
                new ObjectParameter("pLetterDate", pLetterDate) :
                new ObjectParameter("pLetterDate", typeof(System.DateTime));
    
            var pTRNoParameter = pTRNo != null ?
                new ObjectParameter("pTRNo", pTRNo) :
                new ObjectParameter("pTRNo", typeof(string));
    
            var pTRDateParameter = pTRDate.HasValue ?
                new ObjectParameter("pTRDate", pTRDate) :
                new ObjectParameter("pTRDate", typeof(System.DateTime));
    
            var pPlotIdParameter = pPlotId != null ?
                new ObjectParameter("pPlotId", pPlotId) :
                new ObjectParameter("pPlotId", typeof(string));
    
            var pPlumberNameParameter = pPlumberName != null ?
                new ObjectParameter("pPlumberName", pPlumberName) :
                new ObjectParameter("pPlumberName", typeof(string));
    
            var pPlumberLicNoParameter = pPlumberLicNo != null ?
                new ObjectParameter("pPlumberLicNo", pPlumberLicNo) :
                new ObjectParameter("pPlumberLicNo", typeof(string));
    
            var pDisconnectedDateParameter = pDisconnectedDate.HasValue ?
                new ObjectParameter("pDisconnectedDate", pDisconnectedDate) :
                new ObjectParameter("pDisconnectedDate", typeof(System.DateTime));
    
            var pDisconnectionOrderNoParameter = pDisconnectionOrderNo != null ?
                new ObjectParameter("pDisconnectionOrderNo", pDisconnectionOrderNo) :
                new ObjectParameter("pDisconnectionOrderNo", typeof(string));
    
            var pDisconnectionOrderDateParameter = pDisconnectionOrderDate.HasValue ?
                new ObjectParameter("pDisconnectionOrderDate", pDisconnectionOrderDate) :
                new ObjectParameter("pDisconnectionOrderDate", typeof(System.DateTime));
    
            var pPrevBillDateParameter = pPrevBillDate.HasValue ?
                new ObjectParameter("pPrevBillDate", pPrevBillDate) :
                new ObjectParameter("pPrevBillDate", typeof(System.DateTime));
    
            var pPrevReadingDateParameter = pPrevReadingDate.HasValue ?
                new ObjectParameter("pPrevReadingDate", pPrevReadingDate) :
                new ObjectParameter("pPrevReadingDate", typeof(System.DateTime));
    
            var pPrevReadingParameter = pPrevReading.HasValue ?
                new ObjectParameter("pPrevReading", pPrevReading) :
                new ObjectParameter("pPrevReading", typeof(decimal));
    
            var pPrevAssessmentAmtParameter = pPrevAssessmentAmt.HasValue ?
                new ObjectParameter("pPrevAssessmentAmt", pPrevAssessmentAmt) :
                new ObjectParameter("pPrevAssessmentAmt", typeof(decimal));
    
            var pPrevAmountParameter = pPrevAmount.HasValue ?
                new ObjectParameter("pPrevAmount", pPrevAmount) :
                new ObjectParameter("pPrevAmount", typeof(decimal));
    
            var pPrevDPCParameter = pPrevDPC.HasValue ?
                new ObjectParameter("pPrevDPC", pPrevDPC) :
                new ObjectParameter("pPrevDPC", typeof(decimal));
    
            var pPrevRentParameter = pPrevRent.HasValue ?
                new ObjectParameter("pPrevRent", pPrevRent) :
                new ObjectParameter("pPrevRent", typeof(decimal));
    
            var pPrevRefStatusIdParameter = pPrevRefStatusId.HasValue ?
                new ObjectParameter("pPrevRefStatusId", pPrevRefStatusId) :
                new ObjectParameter("pPrevRefStatusId", typeof(int));
    
            var pReConnectedDateParameter = pReConnectedDate.HasValue ?
                new ObjectParameter("pReConnectedDate", pReConnectedDate) :
                new ObjectParameter("pReConnectedDate", typeof(System.DateTime));
    
            var pReconnectedOrderNoParameter = pReconnectedOrderNo != null ?
                new ObjectParameter("pReconnectedOrderNo", pReconnectedOrderNo) :
                new ObjectParameter("pReconnectedOrderNo", typeof(string));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ConsumerMaster_Save", pIDParameter, pConsumerNoParameter, pOldConsumerNoParameter, pFirstNameParameter, pMiddleNameParameter, pLastNameParameter, pFirstNameMarathiParameter, pMiddleNameMarathiParameter, pLastNameMarathiParameter, pAddressParameter, pRefCityIdParameter, pRefStateIdParameter, pRefCountryIdParameter, pPinCodeParameter, pMobileNoParameter, pEmailIdParameter, pContact1Parameter, pContact2Parameter, pRefZoneIdParameter, pRefCampIdParameter, pRefReaderIdParameter, pNoOfConnectionsParameter, pFamilyMemberParameter, pAverageConsumptionParameter, pDepositeParameter, pRefConstructionTypeParameter, pRefMeterSizeIdParameter, pRefMeterTypeIdParameter, pRefSupplyTypeIdParameter, pRefSupplyCategoryIdParameter, pBookNoParameter, pBeatNoParameter, pFolioNoParameter, pOddEvenParameter, pRefDMAIdParameter, pConnectionDateParameter, pSancRefParameter, pLetterNoParameter, pLetterDateParameter, pTRNoParameter, pTRDateParameter, pPlotIdParameter, pPlumberNameParameter, pPlumberLicNoParameter, pDisconnectedDateParameter, pDisconnectionOrderNoParameter, pDisconnectionOrderDateParameter, pPrevBillDateParameter, pPrevReadingDateParameter, pPrevReadingParameter, pPrevAssessmentAmtParameter, pPrevAmountParameter, pPrevDPCParameter, pPrevRentParameter, pPrevRefStatusIdParameter, pReConnectedDateParameter, pReconnectedOrderNoParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_BoardRentMaster_SelectWhere_Result> sp_BoardRentMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BoardRentMaster_SelectWhere_Result>("sp_BoardRentMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_ConsumeRateMaster_SelectWhere_Result> sp_ConsumeRateMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumeRateMaster_SelectWhere_Result>("sp_ConsumeRateMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<sp_MeterMinChargeMaster_SelectWhere_Result> sp_MeterMinChargeMaster_SelectWhere(string dfltWhere)
        {
            var dfltWhereParameter = dfltWhere != null ?
                new ObjectParameter("dfltWhere", dfltWhere) :
                new ObjectParameter("dfltWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MeterMinChargeMaster_SelectWhere_Result>("sp_MeterMinChargeMaster_SelectWhere", dfltWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_BG_GetPrevHLQtyNew(string x_CustNo, Nullable<System.DateTime> x_IssueDate)
        {
            var x_CustNoParameter = x_CustNo != null ?
                new ObjectParameter("X_CustNo", x_CustNo) :
                new ObjectParameter("X_CustNo", typeof(string));
    
            var x_IssueDateParameter = x_IssueDate.HasValue ?
                new ObjectParameter("X_IssueDate", x_IssueDate) :
                new ObjectParameter("X_IssueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_BG_GetPrevHLQtyNew", x_CustNoParameter, x_IssueDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ConsumeDetail_Save(Nullable<int> pID, Nullable<int> pRefConsumerId, Nullable<int> pRefMeterStatusId, Nullable<int> pRefReaderId, Nullable<int> pRefMeterSizeId, Nullable<System.DateTime> pReadingDate, Nullable<decimal> pMeterReading, string pBillType, string pBillMode, Nullable<int> pRefMeterTypeId, Nullable<int> pRefSupplyTypeId, Nullable<int> pRefSupplyCategoryId, Nullable<System.DateTime> pPrevReadingDate, Nullable<decimal> pLastReading, Nullable<decimal> pBillNo, Nullable<System.DateTime> pBillDate, Nullable<System.DateTime> pPrevBillDate, Nullable<System.DateTime> pDueDate, Nullable<decimal> pAssessmentAmt, Nullable<decimal> pPrevAmount, Nullable<decimal> pDueAmount, Nullable<decimal> pRent, Nullable<decimal> pPrevDPC, Nullable<decimal> pDueDPC, Nullable<decimal> pTillDateDPC, Nullable<decimal> pDpcToCharge, Nullable<decimal> pRebate, Nullable<int> pQty, Nullable<int> pQty2, Nullable<int> pQtyAdj, Nullable<int> pHlkQtyAdj, Nullable<decimal> pRate, Nullable<decimal> pRate2, Nullable<int> pQtyConsum, Nullable<int> pConsumAverage, Nullable<int> pQtyBilled, string pBookNo, Nullable<int> pNoOfFlats, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var pRefConsumerIdParameter = pRefConsumerId.HasValue ?
                new ObjectParameter("pRefConsumerId", pRefConsumerId) :
                new ObjectParameter("pRefConsumerId", typeof(int));
    
            var pRefMeterStatusIdParameter = pRefMeterStatusId.HasValue ?
                new ObjectParameter("pRefMeterStatusId", pRefMeterStatusId) :
                new ObjectParameter("pRefMeterStatusId", typeof(int));
    
            var pRefReaderIdParameter = pRefReaderId.HasValue ?
                new ObjectParameter("pRefReaderId", pRefReaderId) :
                new ObjectParameter("pRefReaderId", typeof(int));
    
            var pRefMeterSizeIdParameter = pRefMeterSizeId.HasValue ?
                new ObjectParameter("pRefMeterSizeId", pRefMeterSizeId) :
                new ObjectParameter("pRefMeterSizeId", typeof(int));
    
            var pReadingDateParameter = pReadingDate.HasValue ?
                new ObjectParameter("pReadingDate", pReadingDate) :
                new ObjectParameter("pReadingDate", typeof(System.DateTime));
    
            var pMeterReadingParameter = pMeterReading.HasValue ?
                new ObjectParameter("pMeterReading", pMeterReading) :
                new ObjectParameter("pMeterReading", typeof(decimal));
    
            var pBillTypeParameter = pBillType != null ?
                new ObjectParameter("pBillType", pBillType) :
                new ObjectParameter("pBillType", typeof(string));
    
            var pBillModeParameter = pBillMode != null ?
                new ObjectParameter("pBillMode", pBillMode) :
                new ObjectParameter("pBillMode", typeof(string));
    
            var pRefMeterTypeIdParameter = pRefMeterTypeId.HasValue ?
                new ObjectParameter("pRefMeterTypeId", pRefMeterTypeId) :
                new ObjectParameter("pRefMeterTypeId", typeof(int));
    
            var pRefSupplyTypeIdParameter = pRefSupplyTypeId.HasValue ?
                new ObjectParameter("pRefSupplyTypeId", pRefSupplyTypeId) :
                new ObjectParameter("pRefSupplyTypeId", typeof(int));
    
            var pRefSupplyCategoryIdParameter = pRefSupplyCategoryId.HasValue ?
                new ObjectParameter("pRefSupplyCategoryId", pRefSupplyCategoryId) :
                new ObjectParameter("pRefSupplyCategoryId", typeof(int));
    
            var pPrevReadingDateParameter = pPrevReadingDate.HasValue ?
                new ObjectParameter("pPrevReadingDate", pPrevReadingDate) :
                new ObjectParameter("pPrevReadingDate", typeof(System.DateTime));
    
            var pLastReadingParameter = pLastReading.HasValue ?
                new ObjectParameter("pLastReading", pLastReading) :
                new ObjectParameter("pLastReading", typeof(decimal));
    
            var pBillNoParameter = pBillNo.HasValue ?
                new ObjectParameter("pBillNo", pBillNo) :
                new ObjectParameter("pBillNo", typeof(decimal));
    
            var pBillDateParameter = pBillDate.HasValue ?
                new ObjectParameter("pBillDate", pBillDate) :
                new ObjectParameter("pBillDate", typeof(System.DateTime));
    
            var pPrevBillDateParameter = pPrevBillDate.HasValue ?
                new ObjectParameter("pPrevBillDate", pPrevBillDate) :
                new ObjectParameter("pPrevBillDate", typeof(System.DateTime));
    
            var pDueDateParameter = pDueDate.HasValue ?
                new ObjectParameter("pDueDate", pDueDate) :
                new ObjectParameter("pDueDate", typeof(System.DateTime));
    
            var pAssessmentAmtParameter = pAssessmentAmt.HasValue ?
                new ObjectParameter("pAssessmentAmt", pAssessmentAmt) :
                new ObjectParameter("pAssessmentAmt", typeof(decimal));
    
            var pPrevAmountParameter = pPrevAmount.HasValue ?
                new ObjectParameter("pPrevAmount", pPrevAmount) :
                new ObjectParameter("pPrevAmount", typeof(decimal));
    
            var pDueAmountParameter = pDueAmount.HasValue ?
                new ObjectParameter("pDueAmount", pDueAmount) :
                new ObjectParameter("pDueAmount", typeof(decimal));
    
            var pRentParameter = pRent.HasValue ?
                new ObjectParameter("pRent", pRent) :
                new ObjectParameter("pRent", typeof(decimal));
    
            var pPrevDPCParameter = pPrevDPC.HasValue ?
                new ObjectParameter("pPrevDPC", pPrevDPC) :
                new ObjectParameter("pPrevDPC", typeof(decimal));
    
            var pDueDPCParameter = pDueDPC.HasValue ?
                new ObjectParameter("pDueDPC", pDueDPC) :
                new ObjectParameter("pDueDPC", typeof(decimal));
    
            var pTillDateDPCParameter = pTillDateDPC.HasValue ?
                new ObjectParameter("pTillDateDPC", pTillDateDPC) :
                new ObjectParameter("pTillDateDPC", typeof(decimal));
    
            var pDpcToChargeParameter = pDpcToCharge.HasValue ?
                new ObjectParameter("pDpcToCharge", pDpcToCharge) :
                new ObjectParameter("pDpcToCharge", typeof(decimal));
    
            var pRebateParameter = pRebate.HasValue ?
                new ObjectParameter("pRebate", pRebate) :
                new ObjectParameter("pRebate", typeof(decimal));
    
            var pQtyParameter = pQty.HasValue ?
                new ObjectParameter("pQty", pQty) :
                new ObjectParameter("pQty", typeof(int));
    
            var pQty2Parameter = pQty2.HasValue ?
                new ObjectParameter("pQty2", pQty2) :
                new ObjectParameter("pQty2", typeof(int));
    
            var pQtyAdjParameter = pQtyAdj.HasValue ?
                new ObjectParameter("pQtyAdj", pQtyAdj) :
                new ObjectParameter("pQtyAdj", typeof(int));
    
            var pHlkQtyAdjParameter = pHlkQtyAdj.HasValue ?
                new ObjectParameter("pHlkQtyAdj", pHlkQtyAdj) :
                new ObjectParameter("pHlkQtyAdj", typeof(int));
    
            var pRateParameter = pRate.HasValue ?
                new ObjectParameter("pRate", pRate) :
                new ObjectParameter("pRate", typeof(decimal));
    
            var pRate2Parameter = pRate2.HasValue ?
                new ObjectParameter("pRate2", pRate2) :
                new ObjectParameter("pRate2", typeof(decimal));
    
            var pQtyConsumParameter = pQtyConsum.HasValue ?
                new ObjectParameter("pQtyConsum", pQtyConsum) :
                new ObjectParameter("pQtyConsum", typeof(int));
    
            var pConsumAverageParameter = pConsumAverage.HasValue ?
                new ObjectParameter("pConsumAverage", pConsumAverage) :
                new ObjectParameter("pConsumAverage", typeof(int));
    
            var pQtyBilledParameter = pQtyBilled.HasValue ?
                new ObjectParameter("pQtyBilled", pQtyBilled) :
                new ObjectParameter("pQtyBilled", typeof(int));
    
            var pBookNoParameter = pBookNo != null ?
                new ObjectParameter("pBookNo", pBookNo) :
                new ObjectParameter("pBookNo", typeof(string));
    
            var pNoOfFlatsParameter = pNoOfFlats.HasValue ?
                new ObjectParameter("pNoOfFlats", pNoOfFlats) :
                new ObjectParameter("pNoOfFlats", typeof(int));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ConsumeDetail_Save", pIDParameter, pRefConsumerIdParameter, pRefMeterStatusIdParameter, pRefReaderIdParameter, pRefMeterSizeIdParameter, pReadingDateParameter, pMeterReadingParameter, pBillTypeParameter, pBillModeParameter, pRefMeterTypeIdParameter, pRefSupplyTypeIdParameter, pRefSupplyCategoryIdParameter, pPrevReadingDateParameter, pLastReadingParameter, pBillNoParameter, pBillDateParameter, pPrevBillDateParameter, pDueDateParameter, pAssessmentAmtParameter, pPrevAmountParameter, pDueAmountParameter, pRentParameter, pPrevDPCParameter, pDueDPCParameter, pTillDateDPCParameter, pDpcToChargeParameter, pRebateParameter, pQtyParameter, pQty2Parameter, pQtyAdjParameter, pHlkQtyAdjParameter, pRateParameter, pRate2Parameter, pQtyConsumParameter, pConsumAverageParameter, pQtyBilledParameter, pBookNoParameter, pNoOfFlatsParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_BG_GetConsumerDetailForGenerateBill_Result> sp_BG_GetConsumerDetailForGenerateBill(Nullable<int> pRefCampId, Nullable<int> pRefReaderId, string pOddEven, Nullable<int> pRefMeterStatus)
        {
            var pRefCampIdParameter = pRefCampId.HasValue ?
                new ObjectParameter("pRefCampId", pRefCampId) :
                new ObjectParameter("pRefCampId", typeof(int));
    
            var pRefReaderIdParameter = pRefReaderId.HasValue ?
                new ObjectParameter("pRefReaderId", pRefReaderId) :
                new ObjectParameter("pRefReaderId", typeof(int));
    
            var pOddEvenParameter = pOddEven != null ?
                new ObjectParameter("pOddEven", pOddEven) :
                new ObjectParameter("pOddEven", typeof(string));
    
            var pRefMeterStatusParameter = pRefMeterStatus.HasValue ?
                new ObjectParameter("pRefMeterStatus", pRefMeterStatus) :
                new ObjectParameter("pRefMeterStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BG_GetConsumerDetailForGenerateBill_Result>("sp_BG_GetConsumerDetailForGenerateBill", pRefCampIdParameter, pRefReaderIdParameter, pOddEvenParameter, pRefMeterStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_DrCrNote_Save(Nullable<int> pId, string pNoteType, Nullable<int> pSerialNo, Nullable<int> pRefConsumerId, Nullable<System.DateTime> pNoteDate, Nullable<decimal> pAmount, string pNarration, Nullable<int> pRefReasonId, string pOrderNo, Nullable<System.DateTime> pOrderDate, string pFileName, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pNoteTypeParameter = pNoteType != null ?
                new ObjectParameter("pNoteType", pNoteType) :
                new ObjectParameter("pNoteType", typeof(string));
    
            var pSerialNoParameter = pSerialNo.HasValue ?
                new ObjectParameter("pSerialNo", pSerialNo) :
                new ObjectParameter("pSerialNo", typeof(int));
    
            var pRefConsumerIdParameter = pRefConsumerId.HasValue ?
                new ObjectParameter("pRefConsumerId", pRefConsumerId) :
                new ObjectParameter("pRefConsumerId", typeof(int));
    
            var pNoteDateParameter = pNoteDate.HasValue ?
                new ObjectParameter("pNoteDate", pNoteDate) :
                new ObjectParameter("pNoteDate", typeof(System.DateTime));
    
            var pAmountParameter = pAmount.HasValue ?
                new ObjectParameter("pAmount", pAmount) :
                new ObjectParameter("pAmount", typeof(decimal));
    
            var pNarrationParameter = pNarration != null ?
                new ObjectParameter("pNarration", pNarration) :
                new ObjectParameter("pNarration", typeof(string));
    
            var pRefReasonIdParameter = pRefReasonId.HasValue ?
                new ObjectParameter("pRefReasonId", pRefReasonId) :
                new ObjectParameter("pRefReasonId", typeof(int));
    
            var pOrderNoParameter = pOrderNo != null ?
                new ObjectParameter("pOrderNo", pOrderNo) :
                new ObjectParameter("pOrderNo", typeof(string));
    
            var pOrderDateParameter = pOrderDate.HasValue ?
                new ObjectParameter("pOrderDate", pOrderDate) :
                new ObjectParameter("pOrderDate", typeof(System.DateTime));
    
            var pFileNameParameter = pFileName != null ?
                new ObjectParameter("pFileName", pFileName) :
                new ObjectParameter("pFileName", typeof(string));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_DrCrNote_Save", pIdParameter, pNoteTypeParameter, pSerialNoParameter, pRefConsumerIdParameter, pNoteDateParameter, pAmountParameter, pNarrationParameter, pRefReasonIdParameter, pOrderNoParameter, pOrderDateParameter, pFileNameParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MasterList_Select_Result> sp_MasterList_Select(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterList_Select_Result>("sp_MasterList_Select", pIdParameter);
        }
    
        public virtual ObjectResult<sp_ConsumerList_Select_Result> sp_ConsumerList_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsumerList_Select_Result>("sp_ConsumerList_Select");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ReceiptDetail_Save(Nullable<int> pId, Nullable<int> pRefCollectionCenterId, Nullable<decimal> pCounterNo, Nullable<int> pReceiptNo, Nullable<System.DateTime> pReceiptDate, Nullable<int> pRefConsumerId, Nullable<decimal> pRecAmt, Nullable<int> pRefPaymentTypeId, string pChequeNo, Nullable<System.DateTime> pChequeDate, string pBankName, string pBankBranch, string pIsChqStatus, Nullable<int> pInsUser, string pInsTerminal, Nullable<int> pUpdUser, string pUpdTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefCollectionCenterIdParameter = pRefCollectionCenterId.HasValue ?
                new ObjectParameter("pRefCollectionCenterId", pRefCollectionCenterId) :
                new ObjectParameter("pRefCollectionCenterId", typeof(int));
    
            var pCounterNoParameter = pCounterNo.HasValue ?
                new ObjectParameter("pCounterNo", pCounterNo) :
                new ObjectParameter("pCounterNo", typeof(decimal));
    
            var pReceiptNoParameter = pReceiptNo.HasValue ?
                new ObjectParameter("pReceiptNo", pReceiptNo) :
                new ObjectParameter("pReceiptNo", typeof(int));
    
            var pReceiptDateParameter = pReceiptDate.HasValue ?
                new ObjectParameter("pReceiptDate", pReceiptDate) :
                new ObjectParameter("pReceiptDate", typeof(System.DateTime));
    
            var pRefConsumerIdParameter = pRefConsumerId.HasValue ?
                new ObjectParameter("pRefConsumerId", pRefConsumerId) :
                new ObjectParameter("pRefConsumerId", typeof(int));
    
            var pRecAmtParameter = pRecAmt.HasValue ?
                new ObjectParameter("pRecAmt", pRecAmt) :
                new ObjectParameter("pRecAmt", typeof(decimal));
    
            var pRefPaymentTypeIdParameter = pRefPaymentTypeId.HasValue ?
                new ObjectParameter("pRefPaymentTypeId", pRefPaymentTypeId) :
                new ObjectParameter("pRefPaymentTypeId", typeof(int));
    
            var pChequeNoParameter = pChequeNo != null ?
                new ObjectParameter("pChequeNo", pChequeNo) :
                new ObjectParameter("pChequeNo", typeof(string));
    
            var pChequeDateParameter = pChequeDate.HasValue ?
                new ObjectParameter("pChequeDate", pChequeDate) :
                new ObjectParameter("pChequeDate", typeof(System.DateTime));
    
            var pBankNameParameter = pBankName != null ?
                new ObjectParameter("pBankName", pBankName) :
                new ObjectParameter("pBankName", typeof(string));
    
            var pBankBranchParameter = pBankBranch != null ?
                new ObjectParameter("pBankBranch", pBankBranch) :
                new ObjectParameter("pBankBranch", typeof(string));
    
            var pIsChqStatusParameter = pIsChqStatus != null ?
                new ObjectParameter("pIsChqStatus", pIsChqStatus) :
                new ObjectParameter("pIsChqStatus", typeof(string));
    
            var pInsUserParameter = pInsUser.HasValue ?
                new ObjectParameter("pInsUser", pInsUser) :
                new ObjectParameter("pInsUser", typeof(int));
    
            var pInsTerminalParameter = pInsTerminal != null ?
                new ObjectParameter("pInsTerminal", pInsTerminal) :
                new ObjectParameter("pInsTerminal", typeof(string));
    
            var pUpdUserParameter = pUpdUser.HasValue ?
                new ObjectParameter("pUpdUser", pUpdUser) :
                new ObjectParameter("pUpdUser", typeof(int));
    
            var pUpdTerminalParameter = pUpdTerminal != null ?
                new ObjectParameter("pUpdTerminal", pUpdTerminal) :
                new ObjectParameter("pUpdTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ReceiptDetail_Save", pIdParameter, pRefCollectionCenterIdParameter, pCounterNoParameter, pReceiptNoParameter, pReceiptDateParameter, pRefConsumerIdParameter, pRecAmtParameter, pRefPaymentTypeIdParameter, pChequeNoParameter, pChequeDateParameter, pBankNameParameter, pBankBranchParameter, pIsChqStatusParameter, pInsUserParameter, pInsTerminalParameter, pUpdUserParameter, pUpdTerminalParameter);
        }
    
        public virtual ObjectResult<sp_BG_GetBillDetail_Result> sp_BG_GetBillDetail(Nullable<int> pRefCampId, Nullable<int> pRefReaderId, string pOddEven, Nullable<int> pMeterStatusId, Nullable<System.DateTime> pIssueDate, Nullable<System.DateTime> pDueDate)
        {
            var pRefCampIdParameter = pRefCampId.HasValue ?
                new ObjectParameter("pRefCampId", pRefCampId) :
                new ObjectParameter("pRefCampId", typeof(int));
    
            var pRefReaderIdParameter = pRefReaderId.HasValue ?
                new ObjectParameter("pRefReaderId", pRefReaderId) :
                new ObjectParameter("pRefReaderId", typeof(int));
    
            var pOddEvenParameter = pOddEven != null ?
                new ObjectParameter("pOddEven", pOddEven) :
                new ObjectParameter("pOddEven", typeof(string));
    
            var pMeterStatusIdParameter = pMeterStatusId.HasValue ?
                new ObjectParameter("pMeterStatusId", pMeterStatusId) :
                new ObjectParameter("pMeterStatusId", typeof(int));
    
            var pIssueDateParameter = pIssueDate.HasValue ?
                new ObjectParameter("pIssueDate", pIssueDate) :
                new ObjectParameter("pIssueDate", typeof(System.DateTime));
    
            var pDueDateParameter = pDueDate.HasValue ?
                new ObjectParameter("pDueDate", pDueDate) :
                new ObjectParameter("pDueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BG_GetBillDetail_Result>("sp_BG_GetBillDetail", pRefCampIdParameter, pRefReaderIdParameter, pOddEvenParameter, pMeterStatusIdParameter, pIssueDateParameter, pDueDateParameter);
        }
    }
}
