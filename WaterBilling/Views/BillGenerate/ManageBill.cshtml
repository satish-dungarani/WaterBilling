@model WaterBilling.Models.ConsumeDetailModel

@{
    ViewBag.Title = "Consume Detail";
}

<div class="content-wrapper" style="min-height: 946px;">
    <section class="content-header">
        <h1>
            Bill Generate
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Home</a></li>
            <li><a href="#">Setup</a></li>
            <li class="active">Manage</li>
        </ol>
    </section>
    <section class="content">

        <div class="row">
            <div class="col-md-12">
                <!-- Custom Tabs -->
                <div class="nav-tabs-custom">

                    @using (Ajax.BeginForm("GentBill", "BillGenerate", new AjaxOptions { HttpMethod = "POST", OnBegin = "ConsumeBegin", OnSuccess = "ConsumeSuccess", OnFailure = "ConsumeFail" }))
                    {

                        <div class="row">
                            <div class="col-md-12">
                                <div class="box box-primary">

                                    <div class="box-body">
                                        @Html.HiddenFor(Model => Model.Id)
                                        @Html.HiddenFor(Model => Model.InsUser)
                                        @Html.HiddenFor(Model => Model.InsDate)
                                        @Html.HiddenFor(Model => Model.InsTerminal)
                                        @Html.HiddenFor(Model => Model.UpdUser)
                                        @Html.HiddenFor(Model => Model.UpdDate)
                                        @Html.HiddenFor(Model => Model.UpdTerminal)

                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <div class="box-header with-border">
                                                    <h3 class="box-title text-blue text-bold">Basic Information</h3>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Camp</label>
                                                        <div class="input-group">
                                                            <div class="input-group-addon">
                                                                <i class="fa fa-calendar"></i>
                                                            </div>
                                                            @Html.DropDownList("RefCampId", new SelectList((IEnumerable<SelectListItem>)ViewData["fillCamp"], "Value", "Text"), "----Select Camp----", new { @class = "form-control", @style = "width: 100%;" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Reader Name</label>
                                                        <div id="divReaderList">
                                                            @Html.Partial("_ReaderListPartial")
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        @*<label>Odd/Even</label>*@
                                                        <div class="radio">
                                                            <label>
                                                                @Html.RadioButtonFor(Model => Model.OddEven, "O", new { @checked = "true" })
                                                                Odd
                                                            </label>
                                                        </div>
                                                        <div class="radio">
                                                            <label>
                                                                @Html.RadioButtonFor(Model => Model.OddEven, "E")
                                                                Even
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Meter Status</label>
                                                        @Html.DropDownList("RefMeterStatusId", new SelectList((IEnumerable<SelectListItem>)ViewData["fillMeterStatus"], "Value", "Text"), "----Select MeterStatus----", new { @class = "form-control", @style = "width: 100%;" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Issue Date</label>
                                                        <div class="input-group">
                                                            <div class="input-group-addon">
                                                                <i class="fa fa-calendar"></i>
                                                            </div>
                                                            @Html.TextBoxFor(Model => Model.BillDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @maxlength = 10, placeholder = "dd/MMM/yyyy"})
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <div class="form-group">
                                                        <label>Due Date</label>
                                                        <div class="input-group">
                                                            <div class="input-group-addon">
                                                                <i class="fa fa-calendar"></i>
                                                            </div>
                                                            @Html.TextBoxFor(Model => Model.DueDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @maxlength = 10, placeholder = "dd/MMM/yyyy" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                    </div>

                                    <div class="box-footer">
                                        <input id="btnSubmit" type="submit" value="Save & Continue" class="btn btn-primary btnSubmit" onclick="return Validation();" /> &nbsp; &nbsp;
                                        <input id="btnCancle" type="button" value="Cancle" class="btn btn-primary" onclick="CancleFunction();" /> &nbsp; &nbsp;
                                        @*@Html.ActionLink("Bill Print", "BillPrint", "BillGenerate", null, new { id= "Bill", target = "_blank" })*@
                                        <input type="button" name="btnBillPrint" value="BillPrint" id="btnBillPrint" onclick="OpenReport()" class="btn btn-default"/>
                                        
                                    </div>


                                </div>
                            </div>
                        </div>


                    }
                </div>
            </div><!-- /.col -->
        </div>

        @*<div class="row">
                <div class="col-md-12">
                    <div class="box box-primary">

                        <div class="box-body">
                            <div id="divConsumeDetailList">
                                @Html.Partial("ConsumeDetailListPartial")
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@

    </section>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {
        debugger;



        $("#RefReaderId").select();

        $("#RefCampId").change(function () {
            debugger;
            RetriveReaderDetail();
            //fillGrid($("#RefReaderId").val(), $("#ReadingDate").val());
        });

        //set duedate
        SetDatePicker("DueDate", false);
        SetDatePicker("BillDate", false);

        debugger;
        $("#BillDate").val(moment().format('DD/MMM/YYYY'));
        $("#DueDate").val(moment().add(30, 'days').format("DD/MMM/YYYY"));
    });

    function OpenReport()
    {
        window.open('/BillGenerate/BillPrint?pRefCampId='+$('#RefCampId').val()+'&pRefReaderId='+$("#RefReaderId").val()+'&pOddEven='+$("#OddEven").val()+'&pRefMeterStatusId='+ $("#RefMeterStatusId").val()+'&pBillDate='+ $("#BillDate").val()+'&pDueDate='+ $("#DueDate").val(),'MyWindow')
    }

    //function for DateRange Picker
    function SetDatePicker(_ControlName, _ClearBtn) {
        debugger;

        $('input[name="' + _ControlName + '"]').datepicker({
            showOnFocus: true,
            format: 'dd/M/yyyy',
            todayHighlight: true,
            autoclose: true,
            todayBtn: true,
            clearBtn: _ClearBtn,

            //defaultViewDate: { year: 2015, month: 01, day: 01 }
        });
        SetDefaultValue(_ControlName);
    }

    function SetDefaultValue(_ControlName) {
        var _val = $("#" + _ControlName).val()

        //$('input[name="' + _ControlName + '"]').datepicker("setDate", moment().add(30, 'days').format("DD/MMM/YYYY"))
        if (_ControlName == "DueDate") {
            _val = moment().add(30, 'days').format("DD/MMM/YYYY");
        }
        

        if (_val == '' || _val == '01-01-0001') {
            _val = ''
        }
        $('input[name="' + _ControlName + '"]').datepicker("setDate", _val)
    }

    function CancleFunction() {
        debugger;
        $("#MeterReading").val(0);
        $("#Id").val(0);
        //$("#RefConsumerId").val("");
        RetriveConsumerDetail();
    }

    function Validation() {

        //debugger;

        var _ReaderId = $("#RefReaderId").val();
        var _MeterStatusId = $("#RefMeterStatusId").val();
        var _DueDate = $("#DueDate").val();

        // To validate user Reading Date
        if ($("#DueDate").val() == '' || $("#DueDate").val() == undefined) {
            $("#DueDate").focus();
            toastr["warning"]('Due Date can not left blank!');
            return false;
        }

        // To validate Reader Name
        if ($("#RefReaderId").val() == '' || $("#RefReaderId").val() == undefined) {
            $("#RefReaderId").focus();
            toastr["warning"]('Reader Name can not left blank!');
            return false;
        }

        // To validate Meter Status
        if ($("#RefMeterStatusId").val() == '' || $("#RefMeterStatusId").val() == undefined) {
            $("#RefMeterStatusId").focus();
            toastr["warning"]('Meter Status can not left blank!');
            return false;
        }



        return true;
    }

    function RetriveReaderDetail() {
        var _SelectedCampId = $("#RefCampId").val()
        debugger;
        $.ajax({
            type: 'get',
            datatype: 'html',
            url: '@Url.Action("RetriveReaderList", "BillGenerate")',
            data: { pCampId: _SelectedCampId },
            beforesend: function () {
                //debugger;
                $("#ajaxLoader").show();
            },
            success: function (response) {
                //debugger;
                $("#ajaxLoader").hide();
                $("#divReaderList").html('');
                $("#divReaderList").html(response);
            },
            error: function (jxex) {
                //debugger;
                $("#ajaxloader").hide();
                toastr["error"](jxex);
            }

        });
    }

    function ConsumeBegin() {
        $("#ajaxLoader").show();
    }

    function ConsumeSuccess(response) {
        debugger;
        $("#ajaxLoader").hide();
        if (response.Result == "true") {
            toastr["success"](response._Message);
            ClearData();
            window.open("/BillGenerate/GetBillPrintDetail");
        }
        else {
            toastr["warning"](response._Message);
        }
    }

    function ConsumeFail(ex, st, rsp) {
        debugger;
        $("#ajaxLoader").hide();
        toastr["error"](st + ' : ' + ex);
    }

    function ClearData() {
        $("#RefCampId").val('');
        $("#RefReaderId").val('');
        $("#RefMeterStatusId").val('');
    }


    function BillGenerate() {
        $.ajax({
            type: 'get',
            dataType: 'html',
            cache: false,
            url: '@Url.Action("BillPrint", "BillGenerate")',
            //url: Window.open('@Url.Action("BillPrint", "BillGenerate" )', "_blank" ),
            data: { pRefCampId: $("#RefCampId").val(), pRefReaderId: $("#RefReaderId").val(), pOddEven: $("#OddEven").val(), pRefMeterStatusId: $("#RefMeterStatusId").val(), pBillDate: $("#BillDate").val(), pDueDate: $("#DueDate").val() },
            beforeSend: function () {

            },
            success: function (response) {

                //window.open("", "_blank")
            },
            error: function () {

            }
        });
    }
</script>
