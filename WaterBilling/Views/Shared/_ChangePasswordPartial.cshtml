@using Microsoft.AspNet.Identity
@model WaterBilling.Models.ManageUserViewModel

<p>You're logged in as <strong>@User.Identity.GetUserName()</strong>.</p>

@using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body">

                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary()

                    <div class="col-md-6">
                        <div class="box-header with-border">
                            <h3 class="box-title text-blue text-bold">Change Password</h3>
                        </div>

                        <div class="row">
                            <div class="col-xs-6">
                                @Html.LabelFor(m => m.OldPassword)
                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xs-6">
                                @Html.LabelFor(m => m.NewPassword)
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-xs-6">
                                @Html.LabelFor(m => m.ConfirmPassword)
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="box-footer">
                            <input id="btnSubmit" type="submit" value="Change password" class="btn btn-default" onclick="return Validation()" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function Validation() {


            var _OldPassword = $("#OldPassword");
            var _NewPassword = $("#NewPassword");
            var _ConfirmPassword = $("#ConfirmPassword");

            if (_OldPassword.val() == '' || _OldPassword.val() == undefined) {
                _OldPassword.focus();
                toastr["warning"]('Current Password can not left blank!');
                return false;
            }
            else if (_NewPassword.val() == '' || _NewPassword.val() == undefined) {
                _NewPassword.focus();
                toastr["warning"]('New Password can not left blank!');
                return false;
            }
            else if (_ConfirmPassword.val() == '' || _ConfirmPassword.val() == undefined) {
                _ConfirmPassword.focus();
                toastr["warning"]('Confirm Password can not left blank!');
                return false;
            }
            
        }
    </script>
    
    @*<div class="form-group">
            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Change password" class="btn btn-default" />
            </div>
        </div>*@
}
