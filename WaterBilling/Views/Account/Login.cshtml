@model WaterBilling.Models.LoginViewModel

@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewBag.Title = "Log in";
}

@*<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>*@
@*<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>*@

<div class="col-md-12">
    <section id="loginForm">
        @using (Ajax.BeginForm("Login", "Account", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Success", OnComplete = "Warning", OnFailure = "Failed" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true)

            <div class="form-group has-feedback">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-user"></i>
                    </div>
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "User Name" })
                    @*@Html.ValidationMessageFor(m => m.UserName)*@
                </div>
            </div>

            <div class="form-group has-feedback">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-key"></i>
                    </div>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                    @*@Html.ValidationMessageFor(m => m.Password)*@
                </div>
            </div>

            <div class="row">
                <div class="col-xs-8">
                    <div class="checkbox icheck">
                        <label>
                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "icheckbox_square-blue" }) Remember Me?
                        </label>
                    </div>
                </div><!-- /.col -->
                <div class="col-xs-4">
                    <input id="btnsignin" type="submit" value="Sign In" class="btn btn-primary btn-block btn-flat" onclick="return Validation();" />
                    @*<button type="button" class="btn btn-primary btn-block btn-flat">Sign In</button>*@
                </div><!-- /.col -->
            </div>
        }
    </section>
</div>
@*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@


<script>
    $(document).ready(function () {
        $("#UserName").focus();
        toastr.options = {
            "closeButton": true
        }
        if ('@TempData["Warning"]' != '') {
            toastr["warning"]('@TempData["Warning"]');
            $("#Password").focus();
        }
    })

    function Validation() {
        try {

            var _UserName = $("#UserName").val();
            var _Password = $("#Password").val();
            if (_UserName == "" || _UserName == undefined) {
                //toastr.warning('User Name can not left blank!');
                toastr["warning"]("User Name can not left blank!")
                $("#UserName").focus();
                return false;
            }
            else if (_Password == "" || _Password == undefined) {
                toastr["warning"]('Password can not left blank!');
                $("#Password").focus();
                return false;
            }

            return true;

        } catch (e) {
            toastr["error"](e.message);
        }
    }

    function AjaxLoader() {
        try {

            $("#ajaxLoader").hide();
        } catch (e) {
            toastr["error"](e.message);
        }
    }

    function Success() {
        debugger;
        try {

            toastr["success"]('Successfully Logined!');

        } catch (e) {
            toastr["error"](e.message);
        }

    }

    function Warning() {
        debugger;
        try {

            toastr["error"]('Invalid Login details!');
        } catch (e) {
            toastr["error"](e.message);
        }
    }

    function Failed() {
        debugger;
        try {

            toastr["error"]('Login Failed.');
        } catch (e) {
            toastr["error"](e.message);
        }
    }
</script>
