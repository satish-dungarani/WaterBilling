@using WaterBilling.Models;
@using WaterBillingDB;

@model ReceiptDetailModel

@{
    ViewBag.Title = "Receipt Detail";
}

<div class="content-wrapper" style="min-height: 946px;">
    <section class="content-header">
        <h1>
            Receipt Detail
            <small></small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Home</a></li>
            <li><a href="#">ReceiptDetail</a></li>
            <li class="active">Manage</li>
        </ol>
    </section>
    <section class="content">

        <div class="row">
            <div class="col-md-12">
                <!-- Custom Tabs -->
                <div class="nav-tabs-custom">

                    @using (Ajax.BeginForm("Save", "ReceiptDetail", new AjaxOptions { HttpMethod = "POST", OnBegin = "ConsumeBegin", OnSuccess = "ConsumeSuccess", OnFailure = "ConsumeFail" }))
                    {

                        <div class="row">
                            <div class="col-md-12">
                                <div class="box box-primary">

                                    <div class="box-body">
                                        @Html.HiddenFor(Model => Model.Id)
                                        @Html.HiddenFor(Model => Model.FrmType)
                                        @Html.HiddenFor(Model => Model.InsUser)
                                        @Html.HiddenFor(Model => Model.InsDate)
                                        @Html.HiddenFor(Model => Model.InsTerminal)
                                        @Html.HiddenFor(Model => Model.UpdUser)
                                        @Html.HiddenFor(Model => Model.UpdDate)
                                        @Html.HiddenFor(Model => Model.UpdTerminal)

                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="form-group">
                                                    <div class="box-header with-border">
                                                        <div class="col-xs-6">
                                                            <div class="form-group">
                                                                <h3 class="box-title text-blue text-bold">Receipt Information</h3>
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-3">
                                                            <div class="form-group">
                                                                <label>Collection Center</label>
                                                                @Html.DropDownList("RefCollectionCenterId", new SelectList((IEnumerable<SelectListItem>)ViewData["fillCollectionCenter"], "Value", "Text"), "---Select CollectionCenter---", new { @class = "form-control", @style = "width: 100%;" })
                                                            </div>
                                                        </div>

                                                        <div class="col-xs-3">
                                                            <div class="form-group">
                                                                <label>Counter No</label>
                                                                @Html.TextBoxFor(Model => Model.CounterNo, new { @class = "form-control", @maxlength = 2 })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>


                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Receipt Date</label>
                                                            <div class="input-group">
                                                                <div class="input-group-addon">
                                                                    <i class="fa fa-calendar"></i>
                                                                </div>
                                                                @Html.TextBoxFor(Model => Model.ReceiptDate, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Receipt No</label>
                                                            @Html.TextBoxFor(Model => Model.ReceiptNo, new { @class = "form-control", @maxlength = 6, @readonly = true })
                                                        </div>
                                                    </div>
                                                    @*</div>*@

                                                    @*<div class="row">*@
                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Consumer No</label>
                                                            @Html.TextBoxFor(Model => Model.ConsumerNo, new { @class = "form-control" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Payment Type</label>
                                                            @Html.DropDownList("RefPaymentTypeId", new SelectList((IEnumerable<SelectListItem>)ViewData["fillPaymentType"], "Value", "Text"), new { @class = "form-control", @style = "width: 100%;" })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-12">
                                                        <div class="form-group">
                                                            <label>Receipt Amount</label>
                                                            @Html.TextBoxFor(Model => Model.RecAmt, new { @class = "form-control" })
                                                        </div>
                                                    </div>
                                                    @*</div>*@

                                                    @*<div class="row">*@
                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Cheque No</label>
                                                            @Html.TextBoxFor(Model => Model.ChequeNo, new { @class = "form-control", @maxlength = 10, @readonly = true })
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Cheque Date</label>
                                                            @Html.TextBoxFor(Model => Model.ChequeDate, new { @class = "form-control", placeholder = "dd/MMM/yyyy", @readonly = true })
                                                        </div>
                                                    </div>
                                                    @*</div>*@
                                                    @*<div class="row">*@
                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Bank Name</label>
                                                            @*@Html.DropDownList("RefBankId", new SelectList((IEnumerable<SelectListItem>)ViewData["fillBank"], "Value", "Text"), "-----Select Bank-----", new { @class = "form-control", @disabled = true })*@
                                                            @Html.TextBoxFor(Model => Model.BankName, new { @class = "form-control il" , @readonly = true})
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-6">
                                                        <div class="form-group">
                                                            <label>Bank Branch</label>
                                                            @Html.TextBoxFor(Model => Model.BankBranch, new { @class = "form-control", @readonly = true })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-xs-6">
                                                    <div id="divConsumerDetail">
                                                        @Html.Partial("DisplayConsumerDetailPartial")
                                                    </div>
                                                </div>

                                            </div>

                                            @*<div class="row">
                                                    <div class="row">
                                                        <div class="col-xs-12">
                                                            <div id="divConsumerDetail">
                                                                @Html.Partial("DisplayConsumerDetailPartial")
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>*@

                                        </div>

                                    </div>

                                    <div class="box-footer">
                                        <input id="btnSubmit" type="submit" value="Save & Print" class="btn btn-primary btnSubmit" onclick="return Validation();" /> &nbsp; &nbsp;
                                        <input id="btnCancle" type="button" value="Cancle" class="btn btn-primary" onclick="ClearAllDetail('');" /> &nbsp; &nbsp;
                                    </div>

                                </div>
                            </div>
                        </div>

                    }

                    <div id="divLoadLastTwoReceiptDetail">
                        @Html.Partial("LoadLastTwoReceiptDetailPartial", new sp_ReceiptDetail_SelectWhere_Result())
                    </div>

                </div>
            </div><!-- /.col -->
        </div>
    </section>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {
        debugger;
        //Temp data

        var BankList;
        debugger;
        $.ajax({
            type: 'get',
            dataType: 'json',
            cache: false,
            url: '@Url.Action("GetBankNameList", "ReceiptDetail")',
            data: {},
            beforeSend: function () {

            },
            success: function (response) {
                debugger;
                BankList = response;
                SetAutoComplete(BankList);
            },
            error: function (ex, st, sttext) {
                toastr["error"](sttext);
            }
        });


        if ($("#FrmType").val() == "CC") {
            $("#RefCollectionCenterId").prop("readonly", true);
            $("#ReceiptDate").prop("readonly", true);
            $('input[name="ReceiptDate"]').datepicker('remove');
        }
        else if ($("#FrmType").val() == "OP") {
            $("#RefCollectionCenterId").prop("readonly", false);
            $("#ReceiptDate").prop("readonly", false);
            SetDatePicker("ReceiptDate", true);
        }

        $('#RefPaymentTypeId option:contains("Cash")').prop("selected", true);

        $("#ReceiptDate").val(moment().format('DD/MMM/YYYY'));


        $("#RefPaymentTypeId").on("change", function () {

            if ($("#RefPaymentTypeId option:selected").text().toUpperCase() == "CASH") {
                $("#ChequeNo").prop('readonly', true);
                $("#ChequeDate").prop('readonly', true);
                $("#BankName").prop('readonly', true);
                $("#BankBranch").prop('readonly', true);
                $('input[name="ChequeDate"]').datepicker('remove');
            }
            else {
                $("#ChequeNo").prop('readonly', false);
                $("#ChequeDate").prop('readonly', false);
                $("#BankName").prop('readonly', false);
                $("#BankBranch").prop('readonly', false);
                SetDatePicker("ChequeDate", true);
            }
        });

        $("#CounterNo").focusout(function () {
            CheckNgVe("#CounterNo", 'Couter No can not enter in -Negative or Zero.');
        });

        $("#RecAmt").focusout(function () {
            CheckNgVe("#RecAmt", 'Receipt Amount can not enter in -Negative or Zero.');
        });

        $("#RecAmt").focusout(function () {
            debugger;
            $("label[for='BalanceAmt']").html($("#RecAmt").val() - $("#OutstandingAmt").val());
        });

        $("#CounterNo").keypress(function (e) {
            debugger;
            if ((e.keyCode >= 48 && e.keyCode <= 57))
            { }
            else {
                $("#CounterNo").val('00');
                $("#CounterNo").focus();
                toastr["warning"]('Consumer No only allow numeric value!')
            }
        });

        $("#RecAmt").keyup(function (e) {
            debugger;
            if ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105) || e.keyCode == 46 || e.keyCode == 144 || e.keyCode == 8 || e.keyCode == 110
                || e.keyCode == 39 || (e.keyCode >= 35 && e.keyCode <= 37) || e.keyCode == 16 || e.keyCode == 17 || e.keyCode == 9)
            { }
            else {
                $("#RecAmt").val('0');
                $("#RecAmt").focus();
                toastr["warning"]('Receipt Amount only allow numeric value!')
            }
        });

        $("#ConsumerNo").focusout(function () {
            debugger;
            RetriveConsumer();
        });

        debugger;
        $("#BankName").autocomplete({
            source: BankList
        });
    });

    function SetAutoComplete(BankList)
    {
        $("#BankName").autocomplete({
            source: BankList
        });
    }

    //check value is -ve or not
    function CheckNgVe(_ControlId, _Msg) {
        if ($(_ControlId).val() <= 0) {
            $(_ControlId).focus();
            toastr["warning"](_Msg)
        }
    }

    //function for DateRange Picker
    function SetDatePicker(_ControlName, _ClearBtn) {
        debugger;
        $('input[name="' + _ControlName + '"]').datepicker({
            showOnFocus: true,
            format: 'dd/M/yyyy',
            todayHighlight: true,
            autoclose: true,
            todayBtn: true,
            clearBtn: _ClearBtn,


            //defaultViewDate: { year: 2015, month: 01, day: 01 }
        });
        SetDefaultValue(_ControlName);
    }

    function SetDefaultValue(_ControlName) {
        var _val = $("#" + _ControlName).val()
        $('input[name="' + _ControlName + '"]').datepicker("setDate", Date())
        if (_val == '' || _val == '01-01-0001') {
            _val = ''
        }
        $('input[name="' + _ControlName + '"]').datepicker("setDate", _val)
    }

    function Validation() {

        //debugger;
        var _CollectionCenterId = $("#RefCollectionCenterId").val();
        // To validate user Collection Center
        if (_CollectionCenterId == "" || _CollectionCenterId == undefined) {
            $("#RefCollectionCenterId").focus();
            toastr["warning"]('Collection Center can not left blank!');
            return false;
        }

        var _CountrNo = $("#CounterNo").val();
        // To validate Counter No
        if ($("#CounterNo").val() == '' || $("#CounterNo").val() == undefined || $("#CounterNo").val() == 0) {
            $("#CounterNo").focus();
            toastr["warning"]('Counter No can not left blank!');
            return false;
        }

        var _ConsumerNo = $("#ConsumerNo").val();
        // To validate user Collection Center
        if (_ConsumerNo == '' || _ConsumerNo == undefined) {
            $("#ConsumerNo").focus();
            toastr["warning"]('Consumer No can not left blank!');
            return false;
        }

        var _ConsumerId = $("#RefConsumerId").val();
        // To validate user Collection Center
        if (_ConsumerId == '' || _ConsumerId == 0 || _ConsumerId == undefined) {
            $("#RefConsumerId").focus();
            toastr["warning"]('Consumer Dateil can not left blank!');
            return false;
        }

        var _ReceiptAmount = $("#RecAmt").val();
        // To validate user Collection Center
        if (_ReceiptAmount == '' || _ReceiptAmount == undefined || _ReceiptAmount == 0) {
            $("#RecAmt").focus();
            toastr["warning"]('Receipt Amount can not left blank!');
            return false;
        }

        var _PaymentType = $("#RefPaymentTypeId option:selected").text();
        if (_PaymentType.toUpperCase() != 'CASH') {
            var _ChequeNo = $("#ChequeNo").val();
            // To validate ChequeNo
            if ($("#ChequeNo").val() == '' || $("#ChequeNo").val() == undefined) {
                $("#ChequeNo").focus();
                toastr["warning"]('Cheque No can not left blank!');
                return false;
            }

            var _ChequeDate = $("#ChequeDate").val();
            // To validate Cheque date
            if (_ChequeDate == '' || $_ChequeDate == undefined) {
                $("#ChequeNo").focus();
                toastr["warning"]('Cheque Date can not left blank!');
                return false;
            }

            var _Bank = $("#BankName").val();
            // To validate Bank Name
            if (_Bank == '' || _Bank == undefined) {
                $("#BankName").focus();
                toastr["warning"]('Bank Name can not left blank!');
                return false;
            }

            var _BankBranch = $("#BankBranch").val();
            // To validate Bank branch
            if (_BankBranch == '' || _BankBranch == undefined) {
                $("#BankBranch").focus();
                toastr["warning"]('Bank Branch can not left blank!');
                return false;
            }
        }

        return true;
    }

    function RetriveConsumer() {
        var _ConsumerNo = $("#ConsumerNo").val()
        if (_ConsumerNo != "") {
            //debugger;
            $.ajax({
                type: 'get',
                datatype: 'html',
                url: '@Url.Action("DisplayConsumerDetailPartial", "ReceiptDetail")',
                data: { pConsumerNo: _ConsumerNo },
                beforesend: function () {
                    debugger;
                    $("#ajaxLoader").show();
                },
                success: function (response) {
                    debugger;
                    $("#ajaxLoader").hide();
                    $("#divConsumerDetail").html('');
                    $("#divConsumerDetail").html(response);
                },
                error: function (jxex, ex, st) {
                    debugger;
                    $("#ajaxloader").hide();
                    toastr["error"](jxex.statusText);
                }

            });
        }
        else {

        }
    }

    @*function RetriveConsumerDetail() {
        var _ConsumerId = $("#RefConsumerId").val()
        if (_ConsumerId != "") {
            debugger;
            $.ajax({
                type: 'get',
                datatype: 'html',
                url: '@Url.Action("ConsumerDetailPartial", "ConsumeDetail")',
                data: { pId: _ConsumerId },
                beforesend: function () {
                    //debugger;
                    $("#ajaxLoader").show();
                },
                success: function (response) {
                    //debugger;
                    $("#ajaxLoader").hide();
                    $("#divConsumerDetail").html('');
                    $("#divConsumerDetail").html(response);
                },
                error: function (jxex) {
                    //debugger;
                    $("#ajaxloader").hide();
                    toastr["error"](jxex);
                }

            });
        }
        else {
            $("#divConsumerDetail").html('');
        }
    }*@

    function ConsumeBegin() {

    }

    function ConsumeSuccess(response) {
        debugger;
        //window.print();
        
        $("#divLoadLastTwoReceiptDetail").html('');
        $("#divLoadLastTwoReceiptDetail").html(response);

        $.ajax({
            type: 'get',
            dataType: 'html',
            cache: false,
            url: '@Url.Action("DisplayConsumerDetailPartial","ReceiptDetail")',
            data: { pConsumerNo: '' },
            beforeSend: function () {

            },
            success: function (result) {
                $("#divConsumerDetail").html('');
                $("#divConsumerDetail").html(result);
            },
            error: function (error , st, th) {

            }
        });

        ClearAllDetail(response);
    }

    function ConsumeFail() {
        debugger;

    }

    function ClearAllDetail(_Result) {
        try {
            $("#ConsumerNo").val('');
            //$("#RefPaymentTypeId").val("");
            $("#ChequeNo").val('');
            $("#ChequeDate").val('');
            $("#BankBranch").val('');
            $("#BankName").val("");
            $("#RecAmt").val(0);
            //$("#OutstandingAmt").val(0);
            $("#RefConsumerId").val('');
            $("#ConsumerName").val('');
            $("#ConsumerAddress").val('');
            $("label[for='BalanceAmt']").html(0);

            $("#ChequeNo").prop('readonly', true);
            $("#ChequeDate").prop('readonly', true);
            $("#BankName").prop('readonly', true);
            $("#BankBranch").prop('readonly', true);
            $('input[name="ChequeDate"]').datepicker('remove');

            //$("#divConsumerDetail").html(_Result);
            $("#ConsumerNo").focus();

        } catch (e) {

        }
    }

</script>
